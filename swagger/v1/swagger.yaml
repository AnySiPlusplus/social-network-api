---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/messages":
    post:
      summary: Creates a message
      tags:
      - Message
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client token
        schema:
          type: string
      responses:
        '201':
          description: Message created
        '422':
          description: unprocessable entity
        '401':
          description: not aurhorized
      requestBody:
        content:
          application/json:
            schema:
              properties:
                message:
                  type: object
                  properties:
                    text:
                      type: string
                    file:
                      type: file
                    to_whom:
                      type: string
              required:
              - text
              - file
              - to_whom
    get:
      summary: index messages
      tags:
      - Message
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client token
        schema:
          type: string
      responses:
        '200':
          description: index message
        '401':
          description: not aurhorized
  "/api/v1/messages/{id}":
    parameters:
    - in: header
      name: Authorization
      required: true
      description: Client token
      schema:
        type: string
    delete:
      summary: delete message
      tags:
      - Message
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: delete message
        '401':
          description: un authorized
        '403':
          description: forbidden
        '404':
          description: not found
    put:
      summary: update message
      tags:
      - Message
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: update message
        '403':
          description: forbidden
        '401':
          description: un authorized
        '422':
          description: unprocessed entity
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              properties:
                message:
                  type: object
                  properties:
                    text:
                      type: string
                    file:
                      type: file
                    to_whom:
                      type: string
              required:
              - text
              - file
              - to_whom
    get:
      summary: show message
      tags:
      - Message
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: show project
        '401':
          description: not aurhorized
        '403':
          description: forbidden
        '404':
          description: not found
  "/api/v1/news":
    post:
      summary: Creates a news
      tags:
      - News
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client token
        schema:
          type: string
      responses:
        '201':
          description: News created
        '422':
          description: unprocessable entity
        '401':
          description: not aurhorized
      requestBody:
        content:
          application/json:
            schema:
              properties:
                news:
                  type: object
                  properties:
                    content:
                      type: string
                    file:
                      type: file
              required:
              - text
              - file
    get:
      summary: index news
      tags:
      - News
      parameters:
      - in: header
        name: Authorization
        required: true
        description: Client token
        schema:
          type: string
      responses:
        '200':
          description: index news
        '401':
          description: not aurhorized
  "/api/v1/news/{id}":
    parameters:
    - in: header
      name: Authorization
      required: true
      description: Client token
      schema:
        type: string
    delete:
      summary: delete news
      tags:
      - News
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: delete news
        '401':
          description: un authorized
        '403':
          description: forbidden
        '404':
          description: not found
    put:
      summary: update news
      tags:
      - News
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: update news
        '403':
          description: forbidden
        '401':
          description: un authorized
        '422':
          description: unprocessed entity
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              properties:
                news:
                  type: object
                  properties:
                    text:
                      type: string
                    file:
                      type: file
              required:
              - text
              - file
    get:
      summary: show news
      tags:
      - News
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: show project
        '401':
          description: not aurhorized
        '403':
          description: forbidden
        '404':
          description: not found
  "/api/v1/session":
    post:
      summary: Creates a session
      tags:
      - Session
      parameters: []
      responses:
        '200':
          description: session created
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user:
                  type: object
                  properties:
                    login:
                      type: string
                    password:
                      type: string
              required:
              - login
              - password
    delete:
      summary: delete session
      tags:
      - Session
      parameters:
      - in: header
        name: Authorization
        required: true
        schema:
          type: string
      responses:
        '204':
          description: delete session
        '401':
          description: not authorized
  "/api/v1/users":
    post:
      summary: Creates a user
      tags:
      - User
      operationId: TestUser
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: wrong login params
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user:
                  type: object
                  properties:
                    login:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
              required:
              - login
              - password
              - password_confirmation
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
